@page "/nuevoproducto"
@inject IGenericService<Producto> GenericService
@inject NavigationManager NavigationManager

<HeaderPage TitlePage="Nuevo Producto" />

@if (producto == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <EditForm Model="producto" OnValidSubmit="AgregarProducto">
        <DataAnnotationsValidator />

        <div class="form-group mb-2">
            <label for="Nombre">Nombre:</label>
            <InputText id="Nombre" class="form-control" @bind-Value="producto.Nombre" />
            <ValidationMessage For="@(() => producto.Nombre)" />
        </div>
        <div class="form-group mb-2">
            <label for="Precio">Precio:</label>
            <InputNumber id="Precio" class="form-control" @bind-Value="producto.Precio" />
            <ValidationMessage For="@(() => producto.Precio)" />
        </div>

        <button type="submit" class="btn btn-primary mb-2">Guardar</button>
    </EditForm>
}

@code {
    [SupplyParameterFromQuery]
    [Parameter]
    public int IdProductoEditada { get; set; }

    private Producto producto = new Producto();

    protected override async Task OnInitializedAsync()
    {
        if (IdProductoEditada != 0)
        {
            producto = await GenericService.GetByIdAsync(IdProductoEditada) ?? new Producto();
        }
    }

    private async Task AgregarProducto()
    {
        if (producto != null)
        {
            if (IdProductoEditada == 0)
            {
                await GenericService.AddAsync(producto);
            }
            else
            {
                await GenericService.UpdateAsync(producto);
            }

            NavigationManager.NavigateTo("/productos");
        }
    }
}

